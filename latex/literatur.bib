% Within this .bib-file use 'and' to specify more than one author.

% You have to use only the english abbreviations WITHOUT curly brackets
% for months! e.g.: 'jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul',
% 'aug', 'sep', 'oct', 'nov', 'dec'.


%%%%%%%% inbook
%%
%% A part of a book which may be a chapter (or section or whatever) and/or
%% a range of pages.
%%
%% Required fields:
%% author or editor, title, chapter and/or pages, publisher, year
%%
%% Optional fields:
%% volume or number, series, type, address, edition, month, note


%%%%%%%% booklet
%%
%% A work that is printed and bound, but without a named publisher or
%% sponsoring institution.
%%
%% Required fields:
%% title
%%
%% Optional fields:
%% author, howpublished, address, month, year, note


%%%%%%%% proceedings
%%
%% The proceedings of a conference. See also: inproceedings.
%%
%% Required fields:
%% title, year
%%
%% Optional fields:
%% editor, volume or number, series, address, month, organization, publisher, note


%%%%%%%% inproceedings
%%
%% An article in a conference preceedings.
%%
%% Required fields:
%% author, title, booktitle, year
%%
%% Optional fields:
%% editor, volume or number, series, pages, address, month, organization,
%% publisher, note


%%%%%%%% article
%%
%% An article from a journal or magazine.
%%
%% Required fields:
%% author, title, journal, year
%%
%% Optional fields:
%% volume, number, pages, month, note

@article{gasperini:hal-03209144,
  TITLE = {{An analysis of the steepest descent method to efficiently compute the 3D acoustic single-layer operator in the high-frequency regime}},
  AUTHOR = {{Gasperini, David and Beise, Hans-Peter and Schroeder, Udo and Antoine, Xavier and Geuzaine, Christophe}},
  URL = {https://hal.archives-ouvertes.fr/hal-03209144},
  JOURNAL = {{IMA Journal of Numerical Analysis}},
  PUBLISHER = {{Oxford University Press (OUP)}},
  YEAR = {2022},
  KEYWORDS = {high-frequency scattering ; acoustic single-layer integral operator ; steepest descent method ; highly oscillatory integrals},
  PDF = {https://hal.archives-ouvertes.fr/hal-03209144/file/PaperHFIE.pdf},
  HAL_ID = {hal-03209144},
  HAL_VERSION = {v1},
}


@book{gsl,
  author = {Galassi, Mark and Davies, Jim and Theiler, James and Gough, Brian and Jungman, Gerard},
  year = {2009},
  month = {01},
  pages = {},
  title = {GNU Scientific Library - Reference Manual, Third Edition, for GSL Version 1.12 (3. ed.).},
  isbn = {978-0-9546120-7-8},
  url = {http://www.gnu.org/software/gsl/}
}

@misc{pybind,
  author={Wenzel Jakob},
  title={Pybind11},
  howpublished = {\url{https://github.com/pybind/pybind11}},
  note={Zugriffsdatum 7.10.2022}
}

@book{armadillo,
  author={Conrad Sanderson und Ryan Curtin},
  tilte={Armadillo: a template-based C++ library for linear algebra},
  journal={Journal of Open Source Software, Vol. 1, pp. 26, 2016},
  url={https://arma.sourceforge.net/docs.html}
}

@inproceedings{quadpack,
  title={Quadpack: A Subroutine Package for Automatic Integration},
  author={Robert Piessens and Elise de Doncker-Kapenga and Ch. W. {\"U}berhuber and David K. Kahaner},
  year={2011}
}

@inproceedings{Weidendorfer2004ATS,
  title={A Tool Suite for Simulation Based Analysis of Memory Access Behavior},
  author={Josef Weidendorfer and Markus Kowarschik and Carsten Trinitis},
  booktitle={International Conference on Computational Science},
  year={2004}
}

@article{10.1145/1273442.1250746,
author = {Nethercote, Nicholas and Seward, Julian},
title = {Valgrind: A Framework for Heavyweight Dynamic Binary Instrumentation},
year = {2007},
issue_date = {June 2007},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {42},
number = {6},
issn = {0362-1340},
url = {https://doi.org/10.1145/1273442.1250746},
doi = {10.1145/1273442.1250746},
abstract = {Dynamic binary instrumentation (DBI) frameworks make it easy to build dynamic binary analysis (DBA) tools such as checkers and profilers. Much of the focus on DBI frameworks has been on performance; little attention has been paid to their capabilities. As a result, we believe the potential of DBI has not been fully exploited.In this paper we describe Valgrind, a DBI framework designed for building heavyweight DBA tools. We focus on its unique support for shadow values-a powerful but previously little-studied and difficult-to-implement DBA technique, which requires a tool to shadow every register and memory value with another value that describes it. This support accounts for several crucial design features that distinguish Valgrind from other DBI frameworks. Because of these features, lightweight tools built with Valgrind run comparatively slowly, but Valgrind can be used to build more interesting, heavyweight tools that are difficult or impossible to build with other DBI frameworks such as Pin and DynamoRIO.},
journal = {SIGPLAN Not.},
month = {jun},
pages = {89–100},
numpages = {12},
keywords = {Valgrind, dynamic binary instrumentation, dynamic binary analysis, Memcheck, shadow values}
}

  

@inproceedings{10.1145/1250734.1250746,
author = {Nethercote, Nicholas and Seward, Julian},
title = {Valgrind: A Framework for Heavyweight Dynamic Binary Instrumentation},
year = {2007},
isbn = {9781595936332},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1250734.1250746},
doi = {10.1145/1250734.1250746},
abstract = {Dynamic binary instrumentation (DBI) frameworks make it easy to build dynamic binary analysis (DBA) tools such as checkers and profilers. Much of the focus on DBI frameworks has been on performance; little attention has been paid to their capabilities. As a result, we believe the potential of DBI has not been fully exploited.In this paper we describe Valgrind, a DBI framework designed for building heavyweight DBA tools. We focus on its unique support for shadow values-a powerful but previously little-studied and difficult-to-implement DBA technique, which requires a tool to shadow every register and memory value with another value that describes it. This support accounts for several crucial design features that distinguish Valgrind from other DBI frameworks. Because of these features, lightweight tools built with Valgrind run comparatively slowly, but Valgrind can be used to build more interesting, heavyweight tools that are difficult or impossible to build with other DBI frameworks such as Pin and DynamoRIO.},
booktitle = {Proceedings of the 28th ACM SIGPLAN Conference on Programming Language Design and Implementation},
pages = {89–100},
numpages = {12},
keywords = {shadow values, dynamic binary analysis, Memcheck, dynamic binary instrumentation, Valgrind},
location = {San Diego, California, USA},
series = {PLDI '07}
}

  